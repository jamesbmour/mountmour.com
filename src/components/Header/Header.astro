---
// import { getLanguageFromURL, KNOWN_LANGUAGE_CODES } from "../../languages";
import AstroLogo from "./AstroLogo.astro";
import SkipToContent from "./SkipToContent.astro";
import SidebarToggle from "./SidebarToggle";
// import Search from "./Search";
// import Search from "./SearchSvelte.svelte";
import LeftSidebar from "../LeftSidebar/LeftSidebar.astro";
import SearchBarGem from "./SearchBarGem.jsx";
// import SearchBar from "./SearchBar.astro";
type Props = {
  currentPage: string;
};

const { currentPage } = Astro.props;
// const lang = getLanguageFromURL(currentPage);
---

<header
  class="bg-gray-900 z-11 h-[var(--theme-navbar-height)] w-full bg-[var(--theme-navbar-bg)] flex items-center justify-center overflow-hidden sticky top-0 md:static md:py-8"
>
  <SkipToContent />
  <nav
    class="flex items-center justify-between w-full px-2 max-w-7xl md:px-4"
    title="Top Navigation"
  >
    <div class="flex items-center">
      <div class="mr-2 md:hidden">
        <SidebarToggle client:idle />
      </div>
      <div
        class="logo flex overflow-hidden w-8 text-2xl flex-shrink-0 font-semibold leading-none text-white z-[-1] md:w-auto md:my-0 md:z-0 -ml-2 md:ml-0"
      >
        <a
          href="/"
          class="flex p-2 -m-2 no-underline font-bold transition-colors duration-100 ease-out text-[var(--theme-text)] hover:text-[var(--theme-text-accent)] focus:text-[var(--theme-text-accent)]"
        >
          <AstroLogo size={160} />
        </a>
      </div>
    </div>
    <div
      class="relative z-10 flex flex-grow pr-2 max-w-[150px] md:max-w-[300px]"
    >
      <!-- <Search client:idle /> -->
       <SearchBarGem client:only="react" />
    </div>
        <!-- Search Component
        <div class="hidden lg:flex lg:flex-1 lg:justify-end">
          <Search client:idle />
        </div> -->
  </nav>
</header>
<!-- Mobile sidebar -->
<div
  id="mobile-sidebar"
  class="fixed inset-y-0 left-0 z-30 w-64 transition-transform duration-200 ease-in-out transform -translate-x-full bg-gray-900 md:hidden"
>
  <LeftSidebar currentPage={currentPage} />
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const mobileMenu = document.getElementById("mobile-sidebar") as HTMLElement | null;
    const menuToggle = document.getElementById("menu-toggle") as HTMLElement | null;
    const body = document.body;

    function closeMobileMenu() {
      if (mobileMenu) {
        mobileMenu.classList.add("-translate-x-full");
        body.classList.remove("mobile-sidebar-toggle");
      }
    }

    function toggleMobileMenu() {
      if (mobileMenu) {
        mobileMenu.classList.toggle("-translate-x-full");
        body.classList.toggle("mobile-sidebar-toggle");
      }
    }

    if (menuToggle) {
      menuToggle.addEventListener("click", (e) => {
        e.stopPropagation();
        toggleMobileMenu();
      });
    }

    // Close menu when clicking outside
    document.addEventListener("click", (e) => {
      if (mobileMenu && !mobileMenu.contains(e.target as Node) && !menuToggle?.contains(e.target as Node)) {
        closeMobileMenu();
      }
    });

    // Prevent clicks inside the menu from closing it
    mobileMenu?.addEventListener("click", (e) => {
      e.stopPropagation();
    });
  });
</script>

<style>
  @media (max-width: 768px) {
    body.mobile-sidebar-toggle {
      overflow: hidden;
    }

    #mobile-sidebar {
      transition: transform 0.3s ease-in-out;
    }

    #mobile-sidebar.active {
      transform: translateX(0);
    }

    .logo {
      width: 6rem; 
      height: auto; 
    }
  }
</style>
